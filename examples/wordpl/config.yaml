# Configuration for function minimization example
max_iterations: 20
checkpoint_interval: 10
log_level: "INFO"

# LLM configuration
llm:
  primary_model: "gemini-2.0-flash"
  primary_model_weight: 0.9
  secondary_model: "gemini-2.5-pro"
  secondary_model_weight: 0.1
  api_base: "https://generativelanguage.googleapis.com/v1beta/openai/"
  api_key: YOUR_API_KEY
  temperature: 0.7
  top_p: 0.95
  max_tokens: 4096

# Prompt configuration
prompt:
  system_message: |
    You are an expert programmer. Your task is to improve an algorithm for wordpl.
    The goal of each game is to find the secret word with the smallest possible privacy budget.
    The game selects a secret word at random among the words in answers.txt. The goal of the player is to find this secret word.
    Each round, the player can take one of two actions.

    Get clues: the player selects a five-letter word in valid.txt (the guess), and an epsilon value. The game then generates five clues â€” one per letter.

    'c' means that the secret word contains this letter, at this position.
    'i' means that the secret word contains this letter, but not at this position.
    '.' means that the secret word does not contain this letter.
    Then, the game randomizes these clues. Each clue stays unchanged with probability exp(epsilon/5)/(2+exp(epsilon/5)), and is changed to one of other two clues with probability 1/(2+exp(epsilon/5)).

    The randomized clues are then returned to the player as a 5-character string.

    Propose an answer: the player selects a five-letter word in answers.txt (the final guess). This stops the game.

    If the final guess is the secret word, the player wins. Their score is 1000 - negative the sum of all the epsilon values used in previous rounds.
    If the final guess is not the secret word, the player loses. Their score is (float('-inf')).
    IMPORTANT: Make small changes, and make sure the code works. Prefer changes that does not change function signature or class members.
    NEVER change more than 5 lines of code in a single iteration.
  num_top_programs: 3
  use_template_stochasticity: true

# Database configuration
database:
  population_size: 50
  archive_size: 20
  num_islands: 3
  elite_selection_ratio: 0.2
  exploitation_ratio: 0.7

# Evaluator configuration
evaluator:
  timeout: 600
  cascade_evaluation: false
  cascade_thresholds: [1.0]
  parallel_evaluations: 4
  use_llm_feedback: false

# Evolution settings
diff_based_evolution: true
allow_full_rewrites: false
max_code_length: 12000                # Maximum allowed code length in characters
